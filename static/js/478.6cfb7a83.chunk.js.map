{"version":3,"file":"static/js/478.6cfb7a83.chunk.js","mappings":"8RAEaA,EAAcC,EAAAA,GAAAA,GAAH,gIAQXC,EAAiBD,EAAAA,GAAAA,GAAH,uK,SCNdE,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,8BACE,SAACJ,EAAD,UACGI,EAAMC,KAAI,SAAAC,GAAI,OACb,UAACJ,EAAD,WACGI,EAAKC,cACJ,gBACEC,IAAG,yCAAoCF,EAAKC,cAC5CE,IAAKH,EAAKI,QAGZ,gBAAKF,IAAKG,EAASF,IAAKH,EAAKI,KAAME,MAAM,SAG3C,uBAAIN,EAAKI,QACT,uBAAIJ,EAAKO,cAXUP,EAAKQ,GADb,OAkBtB,ECoBD,EAxCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAUP,EACX,GAAE,CAACA,IAEJ,IAAMO,EAAS,mCAAG,WAAMP,GAAN,gFAChBK,GAAa,GADG,mBAGSG,EAAAA,EAAAA,IAAaR,GAHtB,gBAGNS,EAHM,EAGNA,KACRN,EAASM,EAAKlB,MAJA,yEAOdc,GAAa,GAPC,4EAAH,sDAUf,OACE,2BACGD,IACC,0BACE,SAAC,KAAD,CACEM,MAAM,UACNC,WAAW,oBACXC,OAAQ,GACRf,MAAO,OAIK,IAAjBR,EAAMwB,QACL,SAACzB,EAAD,CAAUC,MAAOA,KAEjB,kDAIP,C,8LC1CDyB,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,GAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBL,EAAAA,GAAAA,IAAA,+BACGC,EADH,kBACoBI,EADpB,yBADlB,uBACGV,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kEAOA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+BpB,GAA/B,yFACkBc,EAAAA,GAAAA,IAAA,gBAAmBd,EAAnB,oBAAsCe,IADxD,uBACGN,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA4BR,GAA5B,yFACkBc,EAAAA,GAAAA,IAAA,gBACZd,EADY,4BACee,IAFjC,uBACGN,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kEAOA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrB,GAA/B,yFACkBc,EAAAA,GAAAA,IAAA,gBACZd,EADY,4BACee,IAFjC,uBACGN,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kE","sources":["components/CastItem/CastItem.styled.js","components/CastItem/CastItem.jsx","pages/Cast.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin-top: -10px;\n  margin-left: -10px;\n`;\n\nexport const StyledCastItem = styled.li`\n  /* &:not(:last-child) {\n    margin-right: 10px;\n  } */\n  margin-top: 10px;\n  margin-left: 10px;\n  flex-basis: calc((100% - 30px) / 3);\n`;\n","import propTypes from 'prop-types';\nimport noImage from '../../images/NoImage.png';\nimport { CastWrapper, StyledCastItem } from './CastItem.styled';\n\nexport const CastItem = ({ casts }) => {\n  return (\n    <article>\n      <CastWrapper>\n        {casts.map(cast => (\n          <StyledCastItem key={cast.id}>\n            {cast.profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w185${cast.profile_path}`}\n                alt={cast.name}\n              />\n            ) : (\n              <img src={noImage} alt={cast.name} width=\"185\" />\n            )}\n\n            <p>{cast.name}</p>\n            <p>{cast.character}</p>\n          </StyledCastItem>\n        ))}\n      </CastWrapper>\n    </article>\n  );\n};\n\nCastItem.propTypes = {\n  casts: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Circles } from 'react-loader-spinner';\nimport { getMovieCast } from '../services/api';\nimport { CastItem } from '../components/CastItem/CastItem';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchCast(movieId);\n  }, [movieId]);\n\n  const fetchCast = async movieId => {\n    setIsLoading(true);\n    try {\n      const { data } = await getMovieCast(movieId);\n      setCasts(data.cast);\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return (\n    <div>\n      {isLoading && (\n        <div>\n          <Circles\n            color=\"#f07416\"\n            arialLabel=\"loading-indicator\"\n            height={80}\n            width={80}\n          />\n        </div>\n      )}\n      {casts.length !== 0 ? (\n        <CastItem casts={casts} />\n      ) : (\n        <p>No information found</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e5eae960ae98d2ed197d9dde8e21f3aa';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response;\n}\n\nexport async function getSearchMovies(searchQuery) {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return { data };\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMovieCast(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return { data };\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return { data };\n}"],"names":["CastWrapper","styled","StyledCastItem","CastItem","casts","map","cast","profile_path","src","alt","name","noImage","width","character","id","movieId","useParams","useState","setCasts","isLoading","setIsLoading","useEffect","fetchCast","getMovieCast","data","color","arialLabel","height","length","axios","API_KEY","getTrendingMovies","response","getSearchMovies","searchQuery","getMovieDetails","getMovieReviews"],"sourceRoot":""}