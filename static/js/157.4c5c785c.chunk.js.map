{"version":3,"file":"static/js/157.4c5c785c.chunk.js","mappings":"sRAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gN,SCCVE,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAACT,EAAD,CAAYU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAhD,SACGI,KAFID,EADC,KASjB,ECfYK,EAAUZ,EAAAA,GAAAA,KAAH,sDAIPa,EAASb,EAAAA,GAAAA,GAAH,8H,QCJnBc,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,GAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kECCP,IAqCA,EArCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAW,mCAAG,2FAClBF,GAAa,GADK,kBAGMP,IAHN,OAGVU,EAHU,OAIhBL,EAAUK,EAAQP,SAJF,yEAOhBI,GAAa,GAPG,4EAAH,qDAWjB,OACE,UAACX,EAAD,WACGU,IACC,0BACE,SAAC,KAAD,CACEK,MAAM,UACNC,WAAW,oBACXC,OAAQ,GACRC,MAAO,QAIb,SAACjB,EAAD,6BACCV,IAAU,SAACD,EAAD,CAAYC,OAAQA,MAGpC,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","services/api.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  /* color: blue; */\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n  &:hover,\n  &:focus {\n    color: #2196f3;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </StyledLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};","import styled from 'styled-components';\n\nexport const Wrapper = styled.main`\n  background-color: #7aceeb;\n`;\n\nexport const Header = styled.h1`\n  font-size: 24px;\n  margin: auto;\n  text-align: center;\n  color: #151617;\n  font-style: italic;\n`;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e5eae960ae98d2ed197d9dde8e21f3aa';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function getSearchMovies(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}","import { useState, useEffect } from 'react';\nimport { Circles } from 'react-loader-spinner';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { Wrapper, Header } from './Home.styled';\nimport { getTrendingMovies } from '../../services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    setIsLoading(true);\n    try {\n      const apiHome = await getTrendingMovies();\n      setMovies(apiHome.results);\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Wrapper>\n      {isLoading && (\n        <div>\n          <Circles\n            color=\"#f07416\"\n            arialLabel=\"loading-indicator\"\n            height={80}\n            width={80}\n          />\n        </div>\n      )}\n      <Header>Trending today</Header>\n      {movies && <MoviesList movies={movies} />}\n    </Wrapper>\n  );\n};\n\nexport default Home;\n"],"names":["StyledLink","styled","Link","MoviesList","movies","location","useLocation","map","id","title","to","state","from","Wrapper","Header","axios","API_KEY","getTrendingMovies","response","data","results","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","apiHome","color","arialLabel","height","width"],"sourceRoot":""}