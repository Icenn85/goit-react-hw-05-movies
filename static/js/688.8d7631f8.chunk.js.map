{"version":3,"file":"static/js/688.8d7631f8.chunk.js","mappings":"mPAEaA,EAAQC,EAAAA,GAAAA,MAAH,8RAcLC,EAAaD,EAAAA,GAAAA,OAAH,2oB,SCZVE,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,kBAAMA,SAAUA,EAAUC,aAAa,MAAvC,WACE,SAACL,EAAD,CAAOM,KAAK,OAAOC,KAAK,WACxB,SAACL,EAAD,CAAYI,KAAK,SAAjB,sBAGL,E,6CCRYE,GAAkBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,wICEfS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAACP,EAAD,CACEQ,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAFjB,SAIGG,EAAMK,SALFL,EAAME,GADA,KAYtB,EC8BD,EA7Ce,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAO,CACT,IAAMG,EAAW,mCAAG,6FAClBP,GAAa,GADK,mBAGOQ,EAAAA,EAAAA,IAAgBJ,GAHvB,gBAGRK,EAHQ,EAGRA,KACRX,EAAUW,EAAKC,SAJC,yEAOhBV,GAAa,GAPG,4EAAH,qDAUjBO,GACD,CACF,GAAE,CAACH,IAOJ,OACE,4BACE,SAACzB,EAAD,CAAWC,SAPQ,SAAA+B,GACrBA,EAAIC,iBACJT,EAAgB,CAAEC,MAAOO,EAAIE,cAAcC,SAASV,MAAMW,OAC3D,IAKIhB,IACC,0BACE,SAAC,KAAD,CACEiB,MAAM,UACNC,WAAW,oBACXC,OAAQ,GACRC,MAAO,QAIb,SAACjC,EAAD,CAAYC,OAAQA,MAGzB,C,8LChDDiC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,GAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,GAFF,kEAKA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA+BgB,GAA/B,yFACkBJ,EAAAA,GAAAA,IAAA,+BACGC,EADH,kBACoBG,EADpB,yBADlB,uBACGf,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kEAOA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBN,EAAAA,GAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCL,IADxD,uBACGZ,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,yFACkBN,EAAAA,GAAAA,IAAA,gBACZM,EADY,4BACeL,IAFjC,uBACGZ,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kEAOA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,yFACkBN,EAAAA,GAAAA,IAAA,gBACZM,EADY,4BACeL,IAFjC,uBACGZ,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kE","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin-right: 10px;\n  height: 20px;\n  padding-left: 10px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus {\n    outline: none;\n    border-color: #2196f3;\n  }\n`;\n\nexport const FormButton = styled.button`\n  height: 20px;\n  color: #000;\n  border: none;\n  border-radius: 5px;\n  padding: 0px 25px;\n  background: #47a8f5;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  &:hover {\n    color: #000;\n    background-color: #ecf0f4;\n    box-shadow: -7px -7px 20px 0px #fff9, -4px -4px 5px 0px #fff9,\n      7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;\n  }\n`;\n","import propTypes from 'prop-types';\n\nimport { Input, FormButton } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit} autoComplete=\"off\">\n      <Input type=\"text\" name=\"query\" />\n      <FormButton type=\"submit\">Search</FormButton>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: propTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMovieList = styled(Link)`\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  &:hover,\n  &:focus {\n    color: #2196f3;\n  }\n`;\n","import propTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport { StyledMovieList } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledMovieList\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            {movie.title}\n          </StyledMovieList>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import { SearchBox } from '../components/SearchBox/SearchBox';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Circles } from 'react-loader-spinner';\nimport { getSearchMovies } from '../services/api';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      const fetchMovies = async () => {\n        setIsLoading(true);\n        try {\n          const { data } = await getSearchMovies(query);\n          setMovies(data.results);\n        } catch (error) {\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchMovies();\n    }\n  }, [query]);\n\n  const onHandleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: evt.currentTarget.elements.query.value });\n  };\n\n  return (\n    <div>\n      <SearchBox onSubmit={onHandleSubmit} />\n      {isLoading && (\n        <div>\n          <Circles\n            color=\"#f07416\"\n            arialLabel=\"loading-indicator\"\n            height={80}\n            width={80}\n          />\n        </div>\n      )}\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e5eae960ae98d2ed197d9dde8e21f3aa';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response;\n}\n\nexport async function getSearchMovies(searchQuery) {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return { data };\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMovieCast(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return { data };\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return { data };\n}"],"names":["Input","styled","FormButton","SearchBox","onSubmit","autoComplete","type","name","StyledMovieList","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovies","getSearchMovies","data","results","evt","preventDefault","currentTarget","elements","value","color","arialLabel","height","width","axios","API_KEY","getTrendingMovies","response","searchQuery","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}